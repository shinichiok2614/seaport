package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ParagraphAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParagraphAllPropertiesEquals(Paragraph expected, Paragraph actual) {
        assertParagraphAutoGeneratedPropertiesEquals(expected, actual);
        assertParagraphAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParagraphAllUpdatablePropertiesEquals(Paragraph expected, Paragraph actual) {
        assertParagraphUpdatableFieldsEquals(expected, actual);
        assertParagraphUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParagraphAutoGeneratedPropertiesEquals(Paragraph expected, Paragraph actual) {
        assertThat(expected)
            .as("Verify Paragraph auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParagraphUpdatableFieldsEquals(Paragraph expected, Paragraph actual) {
        assertThat(expected)
            .as("Verify Paragraph relevant properties")
            .satisfies(e -> assertThat(e.getImage()).as("check image").isEqualTo(actual.getImage()))
            .satisfies(e -> assertThat(e.getImageContentType()).as("check image contenty type").isEqualTo(actual.getImageContentType()))
            .satisfies(e -> assertThat(e.getCaption()).as("check caption").isEqualTo(actual.getCaption()))
            .satisfies(e -> assertThat(e.getContent()).as("check content").isEqualTo(actual.getContent()))
            .satisfies(e -> assertThat(e.getContentType()).as("check contentType").isEqualTo(actual.getContentType()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParagraphUpdatableRelationshipsEquals(Paragraph expected, Paragraph actual) {
        assertThat(expected)
            .as("Verify Paragraph relationships")
            .satisfies(e -> assertThat(e.getParagraph()).as("check paragraph").isEqualTo(actual.getParagraph()));
    }
}
