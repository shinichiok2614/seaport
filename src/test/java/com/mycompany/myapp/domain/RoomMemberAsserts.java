package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RoomMemberAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomMemberAllPropertiesEquals(RoomMember expected, RoomMember actual) {
        assertRoomMemberAutoGeneratedPropertiesEquals(expected, actual);
        assertRoomMemberAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomMemberAllUpdatablePropertiesEquals(RoomMember expected, RoomMember actual) {
        assertRoomMemberUpdatableFieldsEquals(expected, actual);
        assertRoomMemberUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomMemberAutoGeneratedPropertiesEquals(RoomMember expected, RoomMember actual) {
        assertThat(expected)
            .as("Verify RoomMember auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomMemberUpdatableFieldsEquals(RoomMember expected, RoomMember actual) {
        assertThat(expected)
            .as("Verify RoomMember relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getJoinedAt()).as("check joinedAt").isEqualTo(actual.getJoinedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomMemberUpdatableRelationshipsEquals(RoomMember expected, RoomMember actual) {
        assertThat(expected)
            .as("Verify RoomMember relationships")
            .satisfies(e -> assertThat(e.getRoom()).as("check room").isEqualTo(actual.getRoom()));
    }
}
